package edu.duke.cs.legosdn.core.netlog;

import edu.duke.cs.legosdn.core.appvisor.dplane.DPlaneMsgExternalizable;

import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;

public class NetLogRollback implements NetLogMsgIO {

    // Data plane messages delivered by the application to different switches
    private List<DPlaneMsgExternalizable> msgs;
    private int                           msgCount;

    // Unique application identifier
    private String appId;

    private static final String UNINITIALIZED_APPID = "";

    /**
     * Initialize NetLogRollback with no state.
     */
    public NetLogRollback() {
        this(new ArrayList<DPlaneMsgExternalizable>(), UNINITIALIZED_APPID);
    }

    /**
     * Initialize NetLogRollback.
     *
     * @param msgs List of data plane messages generated by the application
     * @param appId Application identifier
     */
    public NetLogRollback(final List<DPlaneMsgExternalizable> msgs, final String appId) {
        this.msgs = msgs;
        this.msgCount = msgs.size();
        this.appId = appId;
    }

    /**
     * @return Application identifier
     */
    public String getAppId() {
        return this.appId;
    }

    /**
     * @return List of outbound messages
     */
    public List<DPlaneMsgExternalizable> getMsgs() {
        return msgs;
    }

    @Override
    public void writeTo(ObjectOutput out) throws IOException {
        out.writeUTF(this.appId);
        out.writeInt(this.msgCount);
        for (DPlaneMsgExternalizable msg : this.msgs) {
            msg.writeExternal(out);
        }
    }

    @Override
    public void readFrom(ObjectInput in) throws IOException, ClassNotFoundException {
        this.appId = in.readUTF();
        this.msgCount = in.readInt();
        for (int m = 0; m < this.msgCount; m++) {
            DPlaneMsgExternalizable msg = new DPlaneMsgExternalizable();
            msg.readExternal(in);
            this.msgs.add(msg);
        }
    }

}
